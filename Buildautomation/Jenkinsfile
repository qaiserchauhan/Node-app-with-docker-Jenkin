pipeline {
    agent {
        docker {
            image 'node:18'   // ✅ Use a valid Node image with npm
        }
    }

    environment {
        SONARQUBE_SERVER = 'SonarQubeServerName' // optional, only if Sonar integrated
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out source code...'
                checkout scm
            }
        }

        stage('SonarQube Analysis') {
            steps {
                echo 'Running SonarQube Scan...'
                // Uncomment when SonarQube is set up
                // withSonarQubeEnv("${SONARQUBE_SERVER}") {
                //     sh 'sonar-scanner'
                // }
                echo 'Skipping actual Sonar scan for now...'
            }
        }

        stage('Install Dependencies') {
            steps {
                echo 'Installing npm dependencies...'
                sh 'npm install'
            }
        }

        stage('Build') {
            steps {
                echo 'Building the application...'
                sh 'npm run build'
            }
        }

        stage('Prepare Artifact') {
            steps {
                echo 'Zipping the build artifacts...'
                sh '''
                    mkdir -p build_artifacts
                    zip -r build_artifacts/app.zip .
                '''
            }
        }
    }

    post {
        success {
            echo '✅ Build and artifact preparation succeeded!'
            archiveArtifacts artifacts: 'build_artifacts/*.zip', fingerprint: true
        }
        failure {
            echo '❌ Build failed!'
        }
    }
}
