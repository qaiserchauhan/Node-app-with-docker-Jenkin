pipeline {
    agent any

    environment {
        PATH = "/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin:/sbin:/usr/sbin:$PATH"
        SONARQUBE_SERVER = 'SonarQubeServerName' // Optional
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out source code...'
                checkout scm
            }
        }

        stage('SonarQube Analysis') {
            steps {
                echo 'Running SonarQube Scan...'
                // Uncomment below lines if SonarQube is integrated
                // withSonarQubeEnv('SonarQubeServerName') {
                //     sh 'sonar-scanner'
                // }
                echo 'Skipping actual sonar scan for now...'
            }
        }

        stage('Install Dependencies') {
            steps {
                echo 'Installing npm dependencies...'
                sh 'npm install'
            }
        }

        stage('Build') {
            steps {
                echo 'Building the application...'
                sh 'npm run build'
            }
        }

        stage('Prepare Artifact') {
            steps {
                echo 'Zipping the build artifacts...'
                sh '''
                    mkdir -p build_artifacts
                    zip -r build_artifacts/app.zip *
                '''
            }
        }
    }

    post {
        success {
            echo 'Build and Artifact preparation succeeded!'
            archiveArtifacts artifacts: 'build_artifacts/*.zip', fingerprint: true
        }
        failure {
            echo 'Build Failed!'
        }
    }
}
